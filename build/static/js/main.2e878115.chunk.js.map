{"version":3,"sources":["reducers/playerReducer.js","actions/index.js","reducers/index.js","store/index.js","Services/api.js","components/Header/ImgHeader.jsx","components/Header/SpanHeader.jsx","components/Header/ButtonHeader.jsx","components/Header.jsx","components/Loading/Loading.jsx","components/Game/Alternatives.jsx","components/Game/Questions.jsx","pages/Game.js","components/Login/InputsLogin.jsx","components/Login/ButtonsLogin.jsx","components/Login/ImgLogin.jsx","pages/Login.js","pages/Configs.js","pages/Ranking.js","pages/Feedback.js","serviceWorker.js","index.js","App.js"],"names":["PLAYER_INITIAL_STATE","playerGravatar","playerName","playerScore","assertions","playerReducer","state","action","type","payload","name","email","score","amount","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","triviaAPI","a","async","fetch","response","json","trivia","triviaPerguntas","token","perguntas","ImgHeader","props","this","console","log","className","src","md5","toString","alt","data-testid","Component","connect","SpanHeader","playerAssertions","playerImg","ButtonHeader","to","Header","Loading","width","height","viewBox","fill","stroke","strokeWidth","points","x","y","Alternatives","buttonEffect","questao","disableButton","disableCorrectButton","incorrect_answers","map","alternativas","index","key","disabled","onClick","correct","correct_answer","Questions","category","question","Game","timer","bind","fiveSeconds","timerCorrectAnswer","nextPergunta","updatePlayer","currentCount","fiveSecCount","redirect","api","startTime","adicionaPlacar","localStorage","setItem","JSON","stringify","player","clearInterval","intervalId","setInterval","setState","document","querySelector","style","border","display","results","button","Player","getItem","Score","parse","forEach","pergunta","difficulty","newScore","target","handleCorretAnswer","buttonWrong","querySelectorAll","buttonCorrect","length","buttonNext","React","dispatch","scoreAction","InputsLogin","validateEmail","placeholder","id","onChange","value","ButtonsLogin","clickBtnJogar","validForm","ImgLogin","Login","nameInput","test","playerAction","gravatarAction","Configs","Ranking","ranking","ordenadoRanking","sort","b","renderRanking","Feedbacks","assertionsCorrect","Number","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","Feedback","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e878115.chunk.js","sourcesContent":["import { ASSERTIONS, GRAVATAR, PLAYER, SCORE } from '../actions';\n\nconst PLAYER_INITIAL_STATE = {\n  playerGravatar: '',\n  playerName: '',\n  playerScore: 0,\n  assertions: 0,\n};\n\nfunction playerReducer(state = PLAYER_INITIAL_STATE, action) {\n  switch (action.type) {\n  case PLAYER:\n    return {\n      ...state,\n      playerName: action.payload.name,\n    };\n  case GRAVATAR:\n    return {\n      ...state,\n      playerGravatar: action.payload.email,\n    };\n  case SCORE:\n    return {\n      ...state,\n      playerScore: action.payload.score,\n    };\n  case ASSERTIONS:\n    return {\n      ...state,\n      assertions: state.assertions + action.amount,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default playerReducer;\n","export const PLAYER = 'PLAYER';\nexport const GRAVATAR = 'GRAVATAR';\nexport const SCORE = 'SCORE';\nexport const ASSERTIONS = 'ASSERTIONS';\n\nexport function playerAction(name) {\n  return {\n    type: PLAYER,\n    payload: {\n      name,\n    },\n  };\n}\n\nexport function gravatarAction(email) {\n  return {\n    type: GRAVATAR,\n    payload: {\n      email,\n    },\n  };\n}\n\nexport function assertionsAction() {\n  return {\n    type: ASSERTIONS,\n    amount: 1,\n  };\n}\n\nexport function scoreAction(score) {\n  return {\n    type: SCORE,\n    payload: {\n      score,\n    },\n  };\n}\n","import { combineReducers } from 'redux';\nimport playerReducer from './playerReducer';\n\nconst rootReducer = combineReducers({ playerReducer });\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export async function triviaAPI() {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const trivia = await response.json();\n  return trivia;\n}\n\nexport async function triviaPerguntas() {\n  const { token } = await triviaAPI();\n  const response = await fetch(`https://opentdb.com/api.php?amount=10&category=15&token=${token}`);\n  const perguntas = await response.json();\n  return perguntas;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\n\nclass ImgHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    const { playerGravatar } = this.props;\n    console.log(playerGravatar);\n    return (\n      <div className=\"div-header\">\n        <img\n          src={ `https://www.gravatar.com/avatar/${md5(playerGravatar).toString()}` }\n          alt=\"Avatar do jogador\"\n          data-testid=\"header-profile-picture\"\n          className=\"header-profile-picture\"\n        />\n      </div>\n    );\n  }\n}\nImgHeader.propTypes = {\n  playerGravatar: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  playerGravatar: state.playerReducer.playerGravatar,\n});\nexport default connect(mapStateToProps)(ImgHeader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass SpanHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    const { playerName, playerScore, playerAssertions } = this.props;\n    return (\n      <div className=\"div-header div-header-text\">\n        <h3\n          data-testid=\"header-player-name\"\n          className=\"header-player-name div-header-text\"\n        >\n          { playerName }\n        </h3>\n        <p>\n          Sua pontuação é:\n          <span\n            data-testid=\"header-score\"\n            className=\"header-score div-header-text\"\n          >\n            {playerScore}\n          </span>\n        </p>\n        <p\n          className=\"header-assertions div-header-text\"\n        >\n          { `Número de acertos atual: ${playerAssertions}` }\n        </p>\n      </div>\n    );\n  }\n}\n\nSpanHeader.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  playerScore: PropTypes.number.isRequired,\n  playerAssertions: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  playerName: state.playerReducer.playerName,\n  playerImg: state.playerReducer.playerGravatar,\n  playerScore: state.playerReducer.playerScore,\n  playerAssertions: state.playerReducer.assertions,\n});\n\nexport default connect(mapStateToProps)(SpanHeader);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ButtonHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    return (\n      <div className=\"div-header\">\n        <Link to=\"/Ranking\">\n          <button\n            type=\"button\"\n            className=\"btn-header\"\n            data-testid=\"btn-ranking\"\n          >\n            Ver Ranking\n\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            className=\"btn-header\"\n            data-testid=\"btn-go-home\"\n          >\n            Home\n\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ButtonHeader;\n","import React, { Component } from 'react';\nimport ImgHeader from './Header/ImgHeader';\nimport SpanHeader from './Header/SpanHeader';\nimport ButtonHeader from './Header/ButtonHeader';\nimport '../style/header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <ImgHeader />\n        <SpanHeader />\n        <ButtonHeader />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../../style/loading.css';\n\nclass Loading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    return (\n      <div className=\"div-loading\">\n        <svg width=\"200\" height=\"200\" viewBox=\"0 0 40 60\">\n          <polygon\n            className=\"triangle\"\n            fill=\"none\"\n            stroke=\"#fff\"\n            strokeWidth=\"1\"\n            points=\"16,1 32,32 1,32\"\n          />\n          <text className=\"loading\" x=\"0\" y=\"45\" fill=\"#fff\">Loading...</text>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alternatives extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    const { state, buttonEffect } = this.props;\n    const { perguntas, questao, disableButton, disableCorrectButton,\n    } = state;\n    return (\n      <div className=\"alternativas\">\n        {perguntas[questao].incorrect_answers.map((alternativas, index) => (\n          <button\n            type=\"button\"\n            className=\"wrong-answer\"\n            data-testid={ `wrong-answer-${index}` }\n            key={ alternativas }\n            disabled={ disableButton }\n            onClick={ buttonEffect }\n          >\n            { alternativas }\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          className=\"correct-answer\"\n          data-testid=\"correct-answer\"\n          key={ perguntas[questao].correct }\n          onClick={ buttonEffect }\n          disabled={ disableCorrectButton }\n        >\n          { perguntas[questao].correct_answer }\n        </button>\n      </div>\n    );\n  }\n}\nAlternatives.propTypes = {\n  state: PropTypes.objectOf(PropTypes.any).isRequired,\n  buttonEffect: PropTypes.func.isRequired,\n};\n\nexport default Alternatives;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    const { questao, perguntas } = this.props;\n    return (\n      <div>\n        <p\n          className=\"question\"\n          data-testid=\"question-category\"\n        >\n          { perguntas[questao].category }\n\n        </p>\n        <p\n          className=\"question\"\n          data-testid=\"question-text\"\n        >\n          { perguntas[questao].question }\n\n        </p>\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  questao: PropTypes.number.isRequired,\n  perguntas: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default Questions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { triviaPerguntas } from '../Services/api';\nimport { assertionsAction, scoreAction } from '../actions';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading/Loading';\nimport '../style/game.css';\nimport Alternatives from '../components/Game/Alternatives';\nimport Questions from '../components/Game/Questions';\n\nconst correctAnswer = '.correct-answer';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = this.timer.bind(this);\n    this.fiveSeconds = this.fiveSeconds.bind(this);\n    this.timerCorrectAnswer = this.timerCorrectAnswer.bind(this);\n    this.nextPergunta = this.nextPergunta.bind(this);\n    this.updatePlayer = this.updatePlayer.bind(this);\n\n    this.state = {\n      perguntas: [],\n      currentCount: 30,\n      fiveSecCount: 5,\n      disableButton: false,\n      disableCorrectButton: false,\n      questao: 0,\n      redirect: false,\n    };\n    this.api = this.api.bind(this);\n    this.buttonEffect = this.buttonEffect.bind(this);\n    this.startTime = this.startTime.bind(this);\n    this.adicionaPlacar = this.adicionaPlacar.bind(this);\n  }\n\n  componentDidMount() {\n    this.api();\n    this.startTime();\n    localStorage.setItem('state', JSON\n      .stringify({ player: { score: 0, assertions: 0 } }));\n    const { score } = this.props;\n    score(0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  startTime() {\n    const MIL = 1000;\n    this.intervalId = setInterval(this.timer, MIL);\n  }\n\n  fiveSeconds() {\n    const MIL = 1000;\n    this.intervalId = setInterval(this.timerCorrectAnswer, MIL);\n  }\n\n  timerCorrectAnswer() {\n    const { fiveSecCount } = this.state;\n    this.setState({ fiveSecCount: fiveSecCount - 1 });\n    if (fiveSecCount === 0) {\n      clearInterval(this.intervalId);\n      this.setState({ disableCorrectButton: false });\n    }\n  }\n\n  timer() {\n    const { currentCount } = this.state;\n    this.setState({\n      currentCount: currentCount - 1,\n    });\n    if (currentCount <= 1) {\n      clearInterval(this.intervalId);\n      this.setState({ disableButton: true, disableCorrectButton: true });\n      this.fiveSeconds();\n      const buttonCorrect = document.querySelector(correctAnswer);\n      buttonCorrect.style.border = '3px solid rgb(6, 240, 15)';\n      const buttonNext = document.querySelector('.btn-next');\n      buttonNext.style.display = 'block';\n    }\n  }\n\n  async api() {\n    const perguntas = await triviaPerguntas();\n    this.setState({\n      perguntas: perguntas.results,\n    });\n  }\n\n  nextPergunta() {\n    const QUATRO = 4;\n    const { questao } = this.state;\n    if (questao < QUATRO) {\n      this.setState({\n        questao: questao + 1,\n        currentCount: 30,\n        disableButton: false,\n        disableCorrectButton: false,\n      });\n      this.startTime();\n    } else {\n      this.setState({\n        redirect: true,\n      });\n    }\n    const buttonCorrect = document.querySelector(correctAnswer);\n    buttonCorrect.style.border = 'none';\n    const buttonNext = document.querySelector('.btn-next');\n    buttonNext.style.display = 'none';\n  }\n\n  adicionaPlacar(button) {\n    const dez = 10;\n    const um = 1;\n    const dois = 2;\n    const tres = 3;\n    const Player = localStorage.getItem('state');\n    const Score = JSON.parse(Player);\n    const { currentCount, perguntas } = this.state;\n    const { playerScore, score, assertions } = this.props;\n    this.setState({\n      disableButton: true,\n      disableCorrectButton: true,\n    });\n    if (button.className === 'correct-answer') {\n      perguntas.forEach((pergunta) => {\n        if (pergunta.difficulty === 'easy') {\n          const newScore = (Score.player.score + (dez + (currentCount * um)));\n          this.updatePlayer(newScore, assertions);\n          score(playerScore + (dez + (currentCount * um)));\n        }\n        if (pergunta.difficulty === 'medium') {\n          const newScore = (Score.player.score + (dez + (currentCount * dois)));\n          this.updatePlayer(newScore, assertions);\n          score(playerScore + (dez + (currentCount * dois)));\n        }\n        if (pergunta.difficulty === 'hard') {\n          const newScore = (Score.player.score + (dez + (currentCount * tres)));\n          this.updatePlayer(newScore, assertions);\n          score(playerScore + (dez + (currentCount * tres)));\n        }\n      });\n    }\n  }\n\n  updatePlayer(newScore, assertions) {\n    localStorage.setItem('state', JSON\n      .stringify({ player: { score: newScore, assertions: assertions + 1 } }));\n  }\n\n  buttonEffect({ target }) {\n    const { handleCorretAnswer } = this.props;\n\n    const buttonWrong = document.querySelectorAll('.wrong-answer');\n    const buttonCorrect = document.querySelector(correctAnswer);\n    const buttonNext = document.querySelector('.btn-next');\n    buttonNext.style.display = 'block';\n    buttonWrong.forEach((button) => {\n      button.style.border = '3px solid rgb(255, 0, 0)';\n    });\n    buttonCorrect.style.border = '3px solid rgb(6, 240, 15)';\n    clearInterval(this.intervalId);\n    this.adicionaPlacar(target);\n    if (target === buttonCorrect) {\n      return handleCorretAnswer();\n    }\n  }\n\n  buttonNext() {\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"btn-next\"\n        className=\"btn-next\"\n        onClick={ this.nextPergunta }\n      >\n        Próxima\n      </button>\n    );\n  }\n\n  render() {\n    const { perguntas, questao, currentCount, disableButton, disableCorrectButton,\n      redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to=\"/feedback\" />;\n    } if (perguntas.length !== 0) {\n      return (\n        <section className=\"sectionPerguntas\">\n          <Header />\n          <article className=\"box-question\">\n            <Questions questao={ questao } perguntas={ perguntas } />\n            <Alternatives\n              disableButton={ disableButton }\n              disableCorrectButton={ disableCorrectButton }\n              state={ this.state }\n              buttonEffect={ this.buttonEffect }\n            />\n            <p className=\"question\">\n              { `Tempo restante: ${currentCount}` }\n            </p>\n\n            {this.buttonNext()}\n          </article>\n        </section>\n      );\n    }\n    return <Loading />;\n  }\n}\n\nGame.propTypes = {\n  handleCorretAnswer: PropTypes.func.isRequired,\n  playerScore: PropTypes.number.isRequired,\n  score: PropTypes.func.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleCorretAnswer: () => dispatch(assertionsAction()),\n  score: (score) => dispatch(scoreAction(score)),\n});\n\nconst mapStateToProps = (state) => ({\n  playerScore: state.playerReducer.playerScore,\n  assertions: state.playerReducer.assertions,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass InputsLogin extends Component {\n  render() {\n    const { validateEmail } = this.props;\n    return (\n      <div className=\"div-login-input\">\n        <input\n          placeholder=\"NOME\"\n          className=\"input-login\"\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          id=\"name\"\n        />\n        <input\n          placeholder=\"EMAIL\"\n          className=\"input-login\"\n          type=\"text\"\n          data-testid=\"input-gravatar-email\"\n          id=\"email\"\n          onChange={ ({ target: { value } }) => validateEmail(value) }\n        />\n      </div>\n    );\n  }\n}\nInputsLogin.propTypes = {\n  validateEmail: PropTypes.func.isRequired,\n};\n\nexport default InputsLogin;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ButtonsLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render() {\n    const { clickBtnJogar, validForm, redirect } = this.props;\n    return (\n      <div className=\"div-login\">\n        <button\n          className=\"button-login\"\n          type=\"button\"\n          data-testid=\"btn-settings\"\n          onClick={ () => redirect() }\n        >\n          Configurações\n        </button>\n        <Link to=\"/jogar\">\n          <button\n            className=\"button-login\"\n            type=\"submit\"\n            data-testid=\"btn-play\"\n            disabled={ validForm }\n            onClick={ clickBtnJogar }\n          >\n            Jogar\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nButtonsLogin.propTypes = {\n  clickBtnJogar: PropTypes.func.isRequired,\n  validForm: PropTypes.bool.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\n\nexport default ButtonsLogin;\n","import React, { Component } from 'react';\n\nclass ImgLogin extends Component {\n  render() {\n    return (\n      <div className=\"img-login\">\n        <h1 className=\"h1-login\">\n          TRIVIA\n          GAME\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default ImgLogin;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { playerAction, gravatarAction } from '../actions';\nimport { triviaAPI } from '../Services/api';\nimport '../style/login.css';\nimport InputsLogin from '../components/Login/InputsLogin';\nimport ButtonsLogin from '../components/Login/ButtonsLogin';\nimport ImgLogin from '../components/Login/ImgLogin';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validForm: true,\n      redirect: false,\n    };\n\n    this.validateEmail = this.validateEmail.bind(this);\n    this.redirect = this.redirect.bind(this);\n  }\n\n  redirect() {\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  validateEmail(email) {\n    const nameInput = document.querySelector('#name').value;\n    const re = /\\S+@\\S+\\.\\S+/;\n    const { playerName, playerImg } = this.props;\n    playerName(nameInput);\n    playerImg(email);\n\n    if ((re.test(email)) && (nameInput.length > 0)) {\n      this.setState({\n        validForm: false,\n      });\n    }\n  }\n\n  async clickBtnJogar() {\n    const { token } = await triviaAPI();\n    localStorage.setItem('token', token);\n  }\n\n  render() {\n    const { validForm, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to=\"/configs\" />;\n    }\n\n    return (\n      <div className=\"div-login-img\">\n        <form className=\"form-login\">\n          <InputsLogin validateEmail={ this.validateEmail } />\n          <ButtonsLogin\n            clickBtnJogar={ this.clickBtnJogar }\n            validForm={ validForm }\n            redirect={ this.redirect }\n          />\n          <ImgLogin />\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  playerImg: PropTypes.func.isRequired,\n  playerName: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  playerName: (name) => dispatch(playerAction(name)),\n  playerImg: (email) => dispatch(gravatarAction(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\n\nclass Configs extends React.Component {\n  render() {\n    return (\n      <>\n        <title data-testid=\"settings-title\">Configurações</title>\n        <h1>cdjscksd</h1>\n      </>\n    );\n  }\n}\n\nexport default Configs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport { Link } from 'react-router-dom';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  renderRanking() {\n    const ranking = JSON.parse(localStorage.getItem('ranking')) || [];\n    const UM_NEGATIVE = -1;\n    const ordenadoRanking = ranking\n      .sort((a, b) => ((a.playerScore > b.playerScore) ? UM_NEGATIVE : 1));\n    return (\n      <ul>\n        {\n          ordenadoRanking.map((player, index) => (\n            <ol key={ index }>\n              <img\n                src={ `https://www.gravatar.com/avatar/${md5(player.playerGravatar).toString()}` }\n                alt=\"Avatar do jogador\"\n              />\n              <span data-testid={ `player-name-${index}` }>{player.playerName}</span>\n              <span data-testid={ `player-score-${index}` }>{player.playerScore}</span>\n              <span>{player.assertions}</span>\n            </ol>\n          ))\n        }\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <section data-testid=\"ranking-title\">\n          {this.renderRanking()}\n          <Link to=\"/\">\n            <button type=\"button\" data-testid=\"btn-go-home\">Home</button>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playerGravatar: state.playerReducer.playerGravatar,\n});\n\nexport default connect(mapStateToProps)(Ranking);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport '../style/feedback.css';\n\nclass Feedbacks extends React.Component {\n  componentDidMount() {\n    const { player } = this.props;\n    const ranking = JSON.parse(localStorage.getItem('ranking')) || [];\n    localStorage.setItem('ranking', JSON.stringify([...ranking, player]));\n  }\n\n  render() {\n    const { assertionsCorrect, playerScore } = this.props;\n    const THREE = 3;\n\n    return (\n      <div className=\"div-feedback\">\n        <Header />\n        <h1 className=\"feedback-text\" data-testid=\"feedback-text\">\n          {assertionsCorrect >= THREE ? 'Mandou bem!' : 'Podia ser melhor...'}\n        </h1>\n        <h2\n          className=\"feedback-text\"\n          data-testid=\"feedback-total-score\"\n        >\n          {playerScore}\n        </h2>\n        <h2\n          className=\"feedback-text\"\n          data-testid=\"feedback-total-question\"\n        >\n          {assertionsCorrect}\n        </h2>\n        <Link\n          to=\"/\"\n          data-testid=\"btn-play-again\"\n          className=\"btn-play-again\"\n        >\n          Jogar novamente\n        </Link>\n      </div>\n    );\n  }\n}\n\nFeedbacks.propTypes = {\n  assertionsCorrect: PropTypes.number.isRequired,\n  playerScore: PropTypes.number.isRequired,\n  player: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertionsCorrect: Number(state.playerReducer.assertions),\n  playerScore: state.playerReducer.playerScore,\n  player: state.playerReducer,\n});\n\nexport default connect(mapStateToProps)(Feedbacks);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Game from './pages/Game';\nimport Login from './pages/Login';\nimport Configs from './pages/Configs';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/configs\" component={ Configs } />\n      <Route path=\"/jogar\" component={ Game } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route path=\"/Ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}